{"name":"LIP","tagline":"Package Management for LIME Pro","body":"#LIP - Package Management for LIME Pro\r\n\r\nLIP is a package management tool for LIME Pro. A package can currently contain declarations for fields and tables, VBA modules, localizations, LIME Bootstrap Apps and SQL-procedures. LIP downloads and installs packages from Package Stores. A Package Store is any valid source which serves correct JSON-files and package.zip files. You can configure which stores to use in the packages.json-file in your actionpad-folder.\r\n\r\nLIP is inspired from Pythons PIP and Nodes NPM but adapted for LIME Pro.\r\n\r\n##Using LIP\r\nThe current implementation is written in VBA and is used in the immediate window in LIME Pro's VBA-editor.\r\n\r\n###Get started\r\nBefore you can start installing packages, you need to install LIP to your LIME Pro database. Download the zip-file, which includes all necessary files to get started, and follow these steps:\r\n\r\n1. Add the SQL-procedures to your database by running the SQL-scripts (Important! Make sure you run the scripts on your database and NOT the master-database by selecting the correct database in the upper left corner)\r\n2. Run `exec lsp_refreshldc` on your database\r\n3. Import the `vba/lip.bas`-file to your VBA.\r\n4. Type the command `lip.InstallLIP` in the Immediate-window of the VBA and press Enter to install all necessary modules.\r\n5. Compile and save the VBA\r\n\r\n###Install a package \r\nTo install a package, simply type your command in the Immediate-window of the VBA. There are three different installation methods:\r\n\r\n`lip.Install(\"Packagename\")`\r\nStandard installation of package. Searches for the package on the stores configured in your `packages.json`-file in the actionpad-folder.\r\n\r\n`lip.InstallFromZip(\"SearchPathToZipFile\")`\r\nInstall a package from a zip-file, provide the searchpath as an argument (including the filename).\r\n\r\n`lip.InstallFromPackageFile`\r\nAll installed packages are kept tracked of inside the `packages.json`-file in the ActionPad folder. If you transfer this file to a new LIME Pro database you can use this file to conduct a brand new install by typing the command above.\r\n\r\n###Update a package\r\nIf a package already exist and should be updated or reinstalled you must explicitly use the update command \r\n\r\n`lip.UpgradePackage(\"ExamplePackage\")`\r\n\r\n###Remove a package\r\n__Not yet implemented!__\r\nShould remove a specified package\r\n\r\n`lip.Remove \"ExamplePackage\"`\r\n\r\n###Freeze a solution to a package\r\n__Not yet implemented!__\r\nCompare to `pip freeze > requirement.txt`. Creates a package from a LIME Pro solution.\r\n\r\n`lip.Freeze`\r\n\r\n##Behind the scene\r\n\r\n\r\n\r\n### A Package\r\nA package is a ZIP-file containing all required resources to install a package\r\n\r\n### A Package Store\r\nA Package Store could either be file based or web based. A store has a fixed URL (example \"http://limebootstrap.lundalogik.se/api/apps\"). The URL has subdirectories for each app (example \"./checklist\"). If the source is a file-based a `/app.json` should automatically be append.\r\n\r\n#### Specifying own package stores\r\nOpen the `packages.json`-file in the actionpad-folder and add your own stores in the \"stores\"-node. Give the store a name and provide the address. Example: \"AppStore\":\"http://limebootstrap.lundalogik.com/api/apps/\"\r\nWhen installing or upgrading a package, the stores will be searched from the top to the bottom, meaning your first store will be searched for the package first, then the second store and so on.\r\n\r\n### app.json\r\n\r\nAn example of how the app.json-file could look like:\r\n\r\n```JSON\r\n{\r\n    \"name\": \"[NAME OF PACKAGE]\",\r\n    \"author\":\"[AUTHORS NAME]\",\r\n    \"status\":\"[STATUS OF THE PACKAGE, CAN BE: 'release', 'beta' OR 'Development']\",\r\n    \"shortDesc\":\"[A short text to describe the package]\",\r\n    \"versions\":[\r\n            {\r\n            \"version\":\"1\",\r\n            \"date\":\"2014-02-06\",\r\n            \"comments\":\"Css improvements!\"\r\n        },\r\n        {\r\n            \"version\":\"0.9\",\r\n            \"date\":\"2013-11-18\",\r\n            \"comments\":\"The first stable beta of the Business Funnel\"\r\n        }\r\n    ],\r\n    \"dependencies\":{\r\n        \"vba_json\":\"1.0\",\r\n        \"lime_basic\":\"5.0\"\r\n    },\r\n    \"install\": {\r\n        \"localize\": [\r\n            {\r\n                \"owner\": \"checklist\",\r\n                \"context\": \"title\",\r\n                \"sv\": \"Test\",\r\n                \"en_us\": \"Test\",\r\n                \"no\": \"Test\",\r\n                \"fi\": \"Test\"\r\n            },\r\n            {\r\n                \"owner\": \"checklist\",\r\n                \"context\": \"description\",\r\n                \"sv\": \"A short description\",\r\n                \"en_us\": \"A short description\",\r\n                \"no\": \"A short description\",\r\n                \"fi\": \"A short description\"\r\n            }\r\n        ],\r\n        \"vba\": [\r\n            {\r\n                \"relPath\": \"Install/Test.bas\",\r\n                \"name\": \"Checklist\"\r\n            }\r\n        ],\r\n        \"sql\":[\r\n        \t{\r\n                \"relPath\": \"test.sql\",\r\n                \"name\": \"csp_mypackage_test\",\r\n                \"type\": \"procedure\"\r\n            }\r\n        ],\r\n        \"tables\": [\r\n            {\r\n                \"name\": \"test\",\r\n                \"localname_singular\": \r\n                {\r\n                    \"sv\": \"Test\",\r\n                    \"en_us\": \"Test\"\r\n                },\r\n                \"localname_plural\": \r\n                {\r\n                    \"sv\": \"Test\",\r\n                    \"en_us\": \"Test\"\r\n                },\r\n                \"attributes\": {\r\n                    \"tableorder\": \"3\",\r\n                    \"invisible\": \"2\",\r\n                    \"descriptive\":\"[test].[title]\"\r\n                },\r\n                \"fields\": [\r\n                    {\r\n                        \"name\": \"title\",\r\n                        \"localname\": {\r\n                            \"sv\": \"Titel\",\r\n                            \"en_us\": \"Title\"\r\n                        }, \r\n                        \"attributes\": {\r\n                            \"fieldtype\": \"text\",\r\n                            \"limereadonly\": \"1\",\r\n                            \"invisible\": \"0\",\r\n                            \"required\": \"1\",\r\n                            \"width\": \"3\",\r\n                            \"height\": \"1\",\r\n                            \"length\": \"256\",\r\n                            \"defaultvalue\": \"Lund\",\r\n                            \"limedefaultvalue\": \"Application.ActiveUser.Record.Id\",\r\n                            \"limerequiredforedit\": \"0\",\r\n                            \"newline\": \"2\",\r\n                            \"sql\": \"[test].[field2]\",\r\n                            \"onsqlupdate\": \"[test].[field3]\",\r\n                            \"onsqlinsert\": \"[test].[field4]\",\r\n                            \"fieldorder\": \"4\",\r\n                            \"isnullable\": \"0\",\r\n                            \"type\": \"1\"\r\n                        },\r\n                        \"separator\": {\r\n                            \"sv\": \"Testseparator\",\r\n                            \"en_us\": \"Test separator\"\r\n                        },\r\n\t\t\t\t\t\t\"options\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"sv\": \"Alt 1\",\r\n\t\t\t\t\t\t\t\t\"en_us\": \"Alt 1\",\r\n\t\t\t\t\t\t\t\t\"key\": \"alt1\",\r\n\t\t\t\t\t\t\t\t\"color\": \"65535\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"sv\": \"Alt 2\",\r\n\t\t\t\t\t\t\t\t\"en_us\": \"Alt 2\",\r\n\t\t\t\t\t\t\t\t\"key\": \"alt2\",\r\n\t\t\t\t\t\t\t\t\"color\": \"255\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n####localize\r\nHere you can specify posts to be added in the localize-table of LIME Pro. Example:\r\n```\r\n\"localize\": [\r\n    {\r\n        \"owner\": \"checklist\",\r\n        \"context\": \"title\",\r\n        \"sv\": \"Test\",\r\n        \"en_us\": \"Test\",\r\n        \"no\": \"Test\",\r\n        \"fi\": \"Test\"\r\n    },\r\n    {\r\n        \"owner\": \"checklist\",\r\n        \"context\": \"description\",\r\n        \"sv\": \"A short description\",\r\n        \"en_us\": \"A short description\",\r\n        \"no\": \"A short description\",\r\n        \"fi\": \"A short description\"\r\n    }\r\n]\r\n```\r\n####sql\r\nWith this node you can add SQL-procedures and -functions by letting LIP run a SQL-file.\r\n```\r\n\"sql\":[\r\n\t{\r\n        \"relPath\": \"test.sql\",\r\n        \"name\": \"csp_mypackage_test\",\r\n        \"type\": \"procedure\"\r\n    }\r\n]\r\n```\r\n#####relPath (mandatory)\r\nSpecify the relative path to the SQL-file to run. Don't forget to include the SQL-file in your package.\r\n\r\n#####name (mandatory)\r\nName of the procedure/function to add. When naming your procedure, remember to include your packagename (e.g. csp_mypackage_addGoals) in the name to distinguish the procedure from others.\r\n\r\n#####type (mandatory)\r\n\"procedure\" or \"function\"\r\n\r\nIMPORTANT: in your SQL-file you CAN'T include the rows before the \"CREATE PROCEDURE\"-row. The reason for this is how the procedure is added to the database. One SQL-file can also only include one procedure. Example of an SQL-file:\r\n```\r\nCREATE PROCEDURE [dbo].[csp_mypackage_addGoals]\r\n    @@myVariable INT = NULL\r\nAS\r\nBEGIN\r\n    SELECT 0\r\n    --My code here\r\nEND\r\n```\r\n#### vba\r\nHere you can specify VBA-modules (Forms and Class Modules are also supported) that should be installed. Please note that the VBA-file MUST be included in the zip-file of your package. Please specify the relative path to the VBA-file and the name of the VBA-module. When adding forms, please include both form-files (.frm and .frx) and specify the .frm-file in \"relPath\". Example:\r\n```\r\n\"vba\": [\r\n    {\r\n        \"relPath\": \"Install/MyForm.frm\",\r\n        \"name\": \"MyForm\"\r\n    },\r\n    {\r\n        \"relPath\": \"Install/MyClassModule.cls\",\r\n        \"name\": \"MyClassModule\"\r\n    }\r\n]\r\n```\r\n\r\n#### tables\r\n\r\n##### name (mandatory)\r\nDatabase name of the table. Example:\r\n```\r\n\"name\": \"goaltable\"\r\n```\r\n##### localname_singular (mandatory)\r\nLocalnames in singular. Each line in this node should represent one language. Valid languages are all languages LIME Pro supports. Example:\r\n```\r\n\"localname_singular\": {\r\n\"sv\": \"Måltabell\",\r\n\"en_us\": \"Goal table\"\r\n}\r\n```\r\n\r\n##### localname_plural (mandatory)\r\nLocalnames in plural. Each line in this node represent a language. Valid languages are all languages LIME Pro supports. Example:\r\n```\r\n\"localname_plural\": {\r\n\"sv\": \"Måltabeller\",\r\n\"en_us\": \"Goal tables\"\r\n}\r\n```\r\n\r\n##### attributes\r\nSets attributes for the table. Each line in this node represent an attribute.\r\n```\r\n\"attributes\": {\r\n                    \"tableorder\": \"3\",\r\n                    \"invisible\": \"2\",\r\n                    \"descriptive\": \"[test].[title]\"\r\n                }\r\n```\r\nValid attributes:\r\n\r\nAttribute | Mandatory |  Possible values | Value if not provided\r\n-----|------|-----|-----\r\ntableorder|No|Integer|Placed last\r\ndescriptive|No|text|Record ID\r\ninvisible|No|1/2 (\"Yes\"/\"Yes, for everyone but administrators\")|\"No\"\r\n\r\n#####fields\r\n    \r\n###### name (mandatory)\r\nThe database name of the field. Example:\r\n```\r\n\"name\": \"customernbr\"\r\n```\r\n\r\n###### localname (mandatory)\r\nLocalnames for the field. Each line in this node represent a language. Valid languages are all languages LIME Pro supports. Example:\r\n```\r\n\"localname\": {\r\n\"sv\": \"Kundnummer\",\r\n\"en_us\": \"Customer number\"\r\n}\r\n```\r\n\r\n###### separator\r\nAdds a separator to the field. The separator is placed BEFORE the field. Specify the localnames for the separator inside this node. Example\r\n```\r\n\"separator\": {\r\n\"sv\": \"Administrativ information\",\r\n\"en_us\": \"Administrative information\"\r\n}\r\n```\r\n###### options\r\nAdds options to an option field, set field or textfield. Every option must be specified as an own node and localnames, keys and colors are placed inside this node.\r\nIf you specify a color, this can't be placed first in the option-node. Some color-examples: red=255, yellow=65535, blue=16711680, green=32768.\r\n\r\nExample:\r\n\r\n```\r\n\"options\": [\r\n\t{\r\n\t\t\"sv\": \"Alt 1\",\r\n\t\t\"en_us\": \"Alt 1\",\r\n\t\t\"key\": \"alt1\",\r\n\t\t\"color\": \"65535\"\r\n\t},\r\n\t{\r\n\t\t\"sv\": \"Alt 2\",\r\n\t\t\"en_us\": \"Alt 2\",\r\n\t\t\"key\": \"alt2\",\r\n\t\t\"color\": \"255\"\r\n\t}\r\n]\r\n```\r\n\r\n###### attributes\r\nSets attributes for the field. Each line in this node represent an attribute.\r\n```\r\n\"attributes\": {\r\n    \"fieldtype\": \"text\",\r\n    \"limereadonly\": \"1\",\r\n    \"invisible\": \"0\",\r\n    \"required\": \"1\",\r\n    \"width\": \"3\",\r\n    \"height\": \"1\",\r\n    \"length\": \"256\",\r\n    \"defaultvalue\": \"Lund\",\r\n    \"limedefaultvalue\": \"Application.ActiveUser.Record.Id\",\r\n    \"limerequiredforedit\": \"0\",\r\n    \"newline\": \"2\",\r\n    \"sql\": \"[test].[field2]\",\r\n    \"onsqlupdate\": \"[test].[field3]\",\r\n    \"onsqlinsert\": \"[test].[field4]\",\r\n    \"fieldorder\": \"4\",\r\n    \"isnullable\": \"0\",\r\n    \"type\": \"1\"\r\n}\r\n```\r\nValid attributes:\r\n\r\nAttribute | Mandatory |  Possible values | Value if not provided\r\n------- | -------- | ------- | --------\r\nfieldtype|Yes|string/geography/integer/decimal/time/ html/xml/link/yesno/file/relation/user/ set/option/formatedstring/color/sql|-\r\ninvisible|No|0/1/2/65535 (No/On forms/In lists/Everywhere)|0\r\nlength|No|integer (can only be set for textfields)|nvarchar(max)\r\nrequired|No|0/1|0\r\nsql (sql expression)|No|text|<empty>\r\nonsqlinsert (SQL for new)|No|text|<empty>\r\nonsqlupdate (SQL for update)|No|text|<empty>\r\nfieldorder|No|Integer|Put last\r\nheight|No|Integer|Default\r\nwidth|No|Integer|Default\r\nnewline (width properties)|No|0/1/2/3 (\"Variable width\"/ \"Variable width on New line\"/ \"Fixed width\"/ \"Fixed width on new line\")|2 (Fixed Width)\r\ndefaultvalue|No|text|Default\r\nlimedefaultvalue|No|text|Default\r\nisnullable|No|0/1|0\r\nlimereadonly|No|0/1|0\r\nrequired_for_editing|No|0/1|0\r\ntype|No|**Timefields:** 0/1/2/3/4/5/6/7/8/9 (\"Date\" / \"Date and Time\" / \"Time\" / \"Year\" / \"Half a Year\" / \"Four Months\" / \"Quarter\" / \"Month\" / \"Week\" / \"Date and Time (with Seconds)\" **Optionlists:** 0/1 (\"Color and Text\"/\"Only Color\")|0\r\n\r\n### Versioning\r\n####Package versioning\r\nPackages should adhere to semantic versioning, example `1.0.0` or `MAJOR.MINOR.PATCH`. Please read [this](http://semver.org). \r\n\r\nSimplified:\r\n`MAJOR`: Breaks backwards compatibility\r\n`MINOR`: Adds new features but backward compatible\r\n`PATCH`: Bugfixes\r\n\r\nMinor and Patchs should always be upgrade to automatically if a dependency require it.\r\n\r\nMajor versions can only be upgraded to if explicit Upgrade command is used\r\n\r\n####Dependency versioning\r\nStateing dependency verisons should adhere to [NPMs versioning](https://github.com/npm/node-semver)\r\n\r\nA `version range` is a set of `comparators` which specify versions\r\nthat satisfy the range.\r\n\r\nA `comparator` is composed of an `operator` and a `version`.  The set\r\nof primitive `operators` is:\r\n\r\n* `<` Less than\r\n* `<=` Less than or equal to\r\n* `>` Greater than\r\n* `>=` Greater than or equal to\r\n* `=` Equal.  If no operator is specified, then equality is assumed,\r\n  so this operator is optional, but MAY be included.\r\n\r\nFor example, the comparator `>=1.2.7` would match the versions\r\n`1.2.7`, `1.2.8`, `2.5.3`, and `1.3.9`, but not the versions `1.2.6`\r\nor `1.1.0`.\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}